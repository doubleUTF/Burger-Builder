{"version":3,"sources":["burger-builder/components/Order/Order.module.css","burger-builder/components/Order/Order.js","burger-builder/containers/Orders/Orders.js"],"names":["module","exports","order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","style","textTransform","display","margin","border","padding","borderRadius","className","styles","Order","Number","parseFloat","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","id","Component","connect","state","loading","auth","dispatch","fetchOrders","withErrorHandler","axios"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,MAAQ,uB,iHCsCXC,EApCD,SAAAC,GACZ,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAAAC,GACvC,OACE,0BACEC,IAAKD,EAAGJ,KACRM,MAAO,CACLC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,OAAQ,iBACRC,QAAS,MACTC,aAAc,QAGfR,EAAGJ,KAXN,KAWcI,EAAGH,OAXjB,QAeJ,OACE,yBAAKY,UAAWC,IAAOC,OACrB,2CAAiBb,GACjB,sCACU,uCAAac,OAAOC,WAAWrB,EAAMsB,OAAOC,QAAQ,O,+BCzB9DC,G,kMAEFC,KAAKzB,MAAM0B,cAAcD,KAAKzB,MAAM2B,MAAOF,KAAKzB,MAAM4B,U,+BAYtD,OARaH,KAAKzB,MAAM6B,OAAOtB,KAAI,SAAAR,GAAK,OACtC,kBAACoB,EAAD,CACEV,IAAKV,EAAM+B,GACX7B,YAAaF,EAAME,YACnBqB,MAAOvB,EAAMuB,e,GAVAS,cAiCNC,uBAfS,SAAAC,GACtB,MAAO,CACLJ,OAAQI,EAAMlC,MAAM8B,OACpBK,QAASD,EAAMlC,MAAMmC,QACrBP,MAAOM,EAAME,KAAKR,MAClBC,OAAQK,EAAME,KAAKP,WAII,SAAAQ,GACzB,MAAO,CACLV,cAAe,SAACC,EAAOC,GAAR,OAAmBQ,EAASC,YAAYV,EAAOC,QAInDI,CAGbM,YAAiBd,EAAQe","file":"static/js/6.79ea5973.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3Sxcf\"};","import React from \"react\";\r\nimport styles from \"./Order.module.css\";\r\n\r\nconst order = props => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName]\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map(ig => {\r\n    return (\r\n      <span\r\n        key={ig.name}\r\n        style={{\r\n          textTransform: \"capitalize\",\r\n          display: \"inline-block\",\r\n          margin: \"0 8px\",\r\n          border: \"1px solid #ccc\",\r\n          padding: \"5px\",\r\n          borderRadius: \"4px\"\r\n        }}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </span>\r\n    );\r\n  });\r\n  return (\r\n    <div className={styles.Order}>\r\n      <p>Ingredients: {ingredientOutput}</p>\r\n      <p>\r\n        Price : <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default order;\r\n","import React, { Component } from \"react\";\r\nimport Order from \"../../components/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler\";\r\nimport { fetchOrders } from \"../../store/actions/\";\r\nimport { connect } from \"react-redux\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\n\r\nclass Orders extends Component {\r\n  componentDidMount() {\r\n    this.props.onFetchOrders(this.props.token, this.props.userId);\r\n  }\r\n\r\n  render() {\r\n    let orders = this.props.orders.map(order => (\r\n      <Order\r\n        key={order.id}\r\n        ingredients={order.ingredients}\r\n        price={order.price}\r\n      ></Order>\r\n    ));\r\n\r\n    return orders;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(fetchOrders(token, userId))\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}